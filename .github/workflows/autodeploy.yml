name: autodeploy

on: [push]

jobs:
  autodeploy:
    runs-on: ubuntu-latest
    env:
      FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: ${{ secrets.DB_PORT }}
      JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
      JWT_REFRESH_EXPIRATION: ${{ secrets.JWT_REFRESH_EXPIRATION }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      MAIL_USERNAME: ${{ secrets.MAIL_USERNAME }}
      MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
      MAIL_HOST: ${{ secrets.MAIL_HOST }}

    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install pack CLI via the official buildpack Action https://github.com/buildpacks/github-actions#setup-pack-cli-action
        uses: buildpacks/github-actions/setup-pack@v4.8.1

      # Caching Paketo Build see https://stackoverflow.com/a/66598693/4964553
      # BP_OCI_SOURCE as --env creates the GitHub Container Registry <-> Repository link (https://paketo.io/docs/buildpacks/configuration/#applying-custom-labels)
      # BP_JVM_VERSION 17, because we use Java 17 inside our Maven build but Paketo defaults to 11
      # Explicitly defining the java-native-image buildpack as described here https://paketo.io/docs/howto/java/#configure-the-graalvm-version
      # to pin the GraalVM version (5.12.0 = GraalVM 21.3)

      - name: Choose default-builder
        run: pack config default-builder 'paketobuildpacks/builder:base'

      - name: login to docker
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u sudobarre --password-stdin

      - name: Build app with pack CLI & publish to GitHub Container Registry
        run: |
          pack build ghcr.io/sudobarre/blogpost-backend:latest \
              --builder paketobuildpacks/builder:base \
#              --buildpack paketo-buildpacks/java-native-image \
#              --buildpack paketo-buildpacks/oracle \
              --path . \
              --env "BP_JVM_VERSION=17" \
#              --env "BP_NATIVE_IMAGE=true" \
          --env "DB_HOST=${{ env.DB_HOST }}" \
          --env "DB_NAME=${{ env.DB_NAME }}" \
          --env "DB_USERNAME=${{ env.DB_USERNAME }}" \
          --env "DB_PASSWORD=${{ env.DB_PASSWORD }}" \
          --env "DB_PORT=${{ env.DB_PORT }}" \
          --env "JWT_EXPIRATION=${{ env.JWT_EXPIRATION }}" \
          --env "JWT_REFRESH_EXPIRATION=${{ env.JWT_REFRESH_EXPIRATION }}" \
          --env "JWT_SECRET=${{ env.JWT_SECRET }}" \
          --env "MAIL_USERNAME=${{ env.MAIL_USERNAME }}" \
          --env "MAIL_PASSWORD=${{ env.MAIL_PASSWORD }}" \
          --env "MAIL_HOST=${{ env.MAIL_HOST }}" \
              --cache-image ghcr.io/sudobarre/blogpost-backend-paketo-cache-image:latest \
              --publish
      - name: Install flyctl via https://github.com/superfly/flyctl-actions
        uses: superfly/flyctl-actions/setup-flyctl@master
      
      - name: Deploy Spring Boot app to fly.io
        run: flyctl deploy --image ghcr.io/sudobarre/blogpost-backend
